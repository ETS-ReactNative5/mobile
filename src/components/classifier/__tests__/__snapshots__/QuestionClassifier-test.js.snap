// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Context.Provider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <UNDEFINED
    classifierActions={
      Object {
        "setClassifierTestMode": [Function],
        "startNewClassification": [Function],
      }
    }
    isFetching={false}
    navBarActions={
      Object {
        "setColorForPageToDefault": [Function],
        "setTitleForPage": [Function],
      }
    }
    project={
      Object {
        "display_name": "Awesome project",
      }
    }
    saveAnnotation={[Function]}
    saveClassification={[Function]}
    seenThisSession={Array []}
    setIsFetching={[Function]}
    startNewClassification={[Function]}
    subject={
      Object {
        "display": Object {
          "src": "blah.jpg",
        },
        "id": "23432432",
      }
    }
    subjectSizes={
      Object {
        "resizedHeight": 100,
        "resizedWidth": 100,
      }
    }
    task={
      Object {
        "answers": Array [
          Object {
            "label": "Yes",
          },
          Object {
            "label": "No",
          },
          Object {
            "label": "Depends if I am hungry",
          },
        ],
        "question": "Do you like this question?",
      }
    }
    workflow={
      Object {
        "configuration": Object {
          "pan_and_zoom": true,
        },
        "first_task": "T0",
        "tasks": Object {
          "T0": Object {
            "answers": Array [
              Object {
                "label": "Yes",
              },
              Object {
                "label": "No",
              },
              Object {
                "label": "Depends if I am hungry",
              },
            ],
            "question": "Do you like this question?",
          },
        },
      }
    }
    workflowID="1"
  />
</Context.Provider>
`;

exports[`renders spinner if fetching 1`] = `
<Context.Provider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <UNDEFINED
    classifierActions={
      Object {
        "setClassifierTestMode": [Function],
        "startNewClassification": [Function],
      }
    }
    isFetching={true}
    navBarActions={
      Object {
        "setColorForPageToDefault": [Function],
        "setTitleForPage": [Function],
      }
    }
    project={
      Object {
        "display_name": "Awesome project",
      }
    }
    seenThisSession={Array []}
    setIsFetching={[Function]}
    startNewClassification={[Function]}
    subject={
      Object {
        "display": Object {
          "src": "blah.jpg",
        },
        "id": "23432432",
      }
    }
    subjectSizes={
      Object {
        "resizedHeight": 100,
        "resizedWidth": 100,
      }
    }
    task={
      Object {
        "answers": Array [
          Object {
            "label": "Yes",
          },
          Object {
            "label": "No",
          },
          Object {
            "label": "Depends if I am hungry",
          },
        ],
        "question": "Do you like this question?",
      }
    }
    workflow={
      Object {
        "configuration": Object {
          "pan_and_zoom": true,
        },
        "first_task": "T0",
        "tasks": Object {
          "T0": Object {
            "answers": Array [
              Object {
                "label": "Yes",
              },
              Object {
                "label": "No",
              },
              Object {
                "label": "Depends if I am hungry",
              },
            ],
            "question": "Do you like this question?",
          },
        },
      }
    }
    workflowID="1"
  />
</Context.Provider>
`;

exports[`renders tutorial if needed 1`] = `
<Context.Provider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <UNDEFINED
    classifierActions={
      Object {
        "setClassifierTestMode": [Function],
        "startNewClassification": [Function],
      }
    }
    isFetching={false}
    navBarActions={
      Object {
        "setColorForPageToDefault": [Function],
        "setTitleForPage": [Function],
      }
    }
    needsTutorial={true}
    project={
      Object {
        "display_name": "Awesome project",
      }
    }
    seenThisSession={Array []}
    setIsFetching={[Function]}
    startNewClassification={[Function]}
    subject={
      Object {
        "display": Object {
          "src": "blah.jpg",
        },
        "id": "23432432",
      }
    }
    subjectSizes={
      Object {
        "resizedHeight": 100,
        "resizedWidth": 100,
      }
    }
    task={
      Object {
        "answers": Array [
          Object {
            "label": "Yes",
          },
          Object {
            "label": "No",
          },
          Object {
            "label": "Depends if I am hungry",
          },
        ],
        "question": "Do you like this question?",
      }
    }
    workflow={
      Object {
        "configuration": Object {
          "pan_and_zoom": true,
        },
        "first_task": "T0",
        "tasks": Object {
          "T0": Object {
            "answers": Array [
              Object {
                "label": "Yes",
              },
              Object {
                "label": "No",
              },
              Object {
                "label": "Depends if I am hungry",
              },
            ],
            "question": "Do you like this question?",
          },
        },
      }
    }
    workflowID="1"
  />
</Context.Provider>
`;
