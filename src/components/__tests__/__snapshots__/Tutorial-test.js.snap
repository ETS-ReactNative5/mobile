// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={undefined}
>
  <RCTScrollView
    style={undefined}
  >
    <View>
      <SizedImage
        source={
          Object {
            "uri": "http://notvalid",
          }
        }
      />
      <WebView
        automaticallyAdjustContentInsets={true}
        domStorageEnabled={true}
        javaScriptEnabled={true}
        onNavigationStateChange={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scalesPageToFit={true}
        source={
          Object {
            "baseUrl": "about:blank",
            "html": "<!DOCTYPE html>
<html>
    <head>
        <meta charset=\\"utf-8\\">
        <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
        <meta name=\\"viewport\\" content=\\"initial-scale=1, maximum-scale=1\\">
        <meta name=\\"format-detection\\" content=\\"telephone=no\\">
        <meta name=\\"format-detection\\" content=\\"date=no\\">
        <meta name=\\"format-detection\\" content=\\"address=no\\">
        <meta name=\\"format-detection\\" content=\\"email=no\\">

        <title></title>


        <style type=\\"text/css\\">
            body, html, #height-wrapper {
                margin: 0;
                padding: 0;
            }
            #height-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
            body {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
            }
            b, strong {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: bold;
            }
            h1, h2, h3, h4, h5, h6 {
                margin-top: 10px;
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: 500;
            }
            img {
              height: auto;
              width: auto;
              max-width: 300px;
              max-height: 300px;
            }
            p {
              margin: 0;
            }
            
        </style>
    </head>
    <body>
        <h3>Welcome to Planet Four: Ridges</h3>
<hr>
<p>This brief tutorial will teach you how to discover polygonal ridges on Mars. By mapping these features, you are helping to explore Mars' past.</p>


    <script>

    ;(function() {
    var wrapper = document.createElement(\\"div\\");
    wrapper.id = \\"height-wrapper\\";
    while (document.body.firstChild) {
        wrapper.appendChild(document.body.firstChild);
    }
    document.body.appendChild(wrapper);
    var i = 0;
    function updateHeight() {
        document.title = wrapper.clientHeight;
        window.location.hash = ++i;
    }
    updateHeight();
    window.addEventListener(\\"load\\", function() {
        updateHeight();
        setTimeout(updateHeight, 1000);
    });
    window.addEventListener(\\"resize\\", updateHeight);
    }());

    </script>
    </body>
</html>",
          }
        }
        style={
          Array [
            undefined,
            Object {
              "height": 0,
              "width": 670,
            },
          ]
        }
      />
    </View>
  </RCTScrollView>
  <View
    style={undefined}
  >
    <View
      style={undefined}
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={undefined}
      >
        Continue
      </Text>
    </View>
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders header if initial tutorial 1`] = `
<View
  style={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        undefined,
        Array [
          undefined,
        ],
      ]
    }
  >
    Awesome project - Tutorial
  </Text>
  <RCTScrollView
    style={undefined}
  >
    <View>
      <SizedImage
        source={
          Object {
            "uri": "http://notvalid",
          }
        }
      />
      <WebView
        automaticallyAdjustContentInsets={true}
        domStorageEnabled={true}
        javaScriptEnabled={true}
        onNavigationStateChange={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scalesPageToFit={true}
        source={
          Object {
            "baseUrl": "about:blank",
            "html": "<!DOCTYPE html>
<html>
    <head>
        <meta charset=\\"utf-8\\">
        <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
        <meta name=\\"viewport\\" content=\\"initial-scale=1, maximum-scale=1\\">
        <meta name=\\"format-detection\\" content=\\"telephone=no\\">
        <meta name=\\"format-detection\\" content=\\"date=no\\">
        <meta name=\\"format-detection\\" content=\\"address=no\\">
        <meta name=\\"format-detection\\" content=\\"email=no\\">

        <title></title>


        <style type=\\"text/css\\">
            body, html, #height-wrapper {
                margin: 0;
                padding: 0;
            }
            #height-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
            body {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
            }
            b, strong {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: bold;
            }
            h1, h2, h3, h4, h5, h6 {
                margin-top: 10px;
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: 500;
            }
            img {
              height: auto;
              width: auto;
              max-width: 300px;
              max-height: 300px;
            }
            p {
              margin: 0;
            }
            
        </style>
    </head>
    <body>
        <h3>Welcome to Planet Four: Ridges</h3>
<hr>
<p>This brief tutorial will teach you how to discover polygonal ridges on Mars. By mapping these features, you are helping to explore Mars' past.</p>


    <script>

    ;(function() {
    var wrapper = document.createElement(\\"div\\");
    wrapper.id = \\"height-wrapper\\";
    while (document.body.firstChild) {
        wrapper.appendChild(document.body.firstChild);
    }
    document.body.appendChild(wrapper);
    var i = 0;
    function updateHeight() {
        document.title = wrapper.clientHeight;
        window.location.hash = ++i;
    }
    updateHeight();
    window.addEventListener(\\"load\\", function() {
        updateHeight();
        setTimeout(updateHeight, 1000);
    });
    window.addEventListener(\\"resize\\", updateHeight);
    }());

    </script>
    </body>
</html>",
          }
        }
        style={
          Array [
            undefined,
            Object {
              "height": 0,
              "width": 670,
            },
          ]
        }
      />
    </View>
  </RCTScrollView>
  <View
    style={undefined}
  >
    <View
      style={undefined}
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={undefined}
      >
        Continue
      </Text>
    </View>
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders with no media 1`] = `
<View
  style={undefined}
>
  <RCTScrollView
    style={undefined}
  >
    <View>
      <WebView
        automaticallyAdjustContentInsets={true}
        domStorageEnabled={true}
        javaScriptEnabled={true}
        onNavigationStateChange={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scalesPageToFit={true}
        source={
          Object {
            "baseUrl": "about:blank",
            "html": "<!DOCTYPE html>
<html>
    <head>
        <meta charset=\\"utf-8\\">
        <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
        <meta name=\\"viewport\\" content=\\"initial-scale=1, maximum-scale=1\\">
        <meta name=\\"format-detection\\" content=\\"telephone=no\\">
        <meta name=\\"format-detection\\" content=\\"date=no\\">
        <meta name=\\"format-detection\\" content=\\"address=no\\">
        <meta name=\\"format-detection\\" content=\\"email=no\\">

        <title></title>


        <style type=\\"text/css\\">
            body, html, #height-wrapper {
                margin: 0;
                padding: 0;
            }
            #height-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
            body {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
            }
            b, strong {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: bold;
            }
            h1, h2, h3, h4, h5, h6 {
                margin-top: 10px;
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: 500;
            }
            img {
              height: auto;
              width: auto;
              max-width: 300px;
              max-height: 300px;
            }
            p {
              margin: 0;
            }
            
        </style>
    </head>
    <body>
        <h3>Welcome to Planet Four: Ridges</h3>
<hr>
<p>This brief tutorial will teach you how to discover polygonal ridges on Mars. By mapping these features, you are helping to explore Mars' past.</p>


    <script>

    ;(function() {
    var wrapper = document.createElement(\\"div\\");
    wrapper.id = \\"height-wrapper\\";
    while (document.body.firstChild) {
        wrapper.appendChild(document.body.firstChild);
    }
    document.body.appendChild(wrapper);
    var i = 0;
    function updateHeight() {
        document.title = wrapper.clientHeight;
        window.location.hash = ++i;
    }
    updateHeight();
    window.addEventListener(\\"load\\", function() {
        updateHeight();
        setTimeout(updateHeight, 1000);
    });
    window.addEventListener(\\"resize\\", updateHeight);
    }());

    </script>
    </body>
</html>",
          }
        }
        style={
          Array [
            undefined,
            Object {
              "height": 0,
              "width": 670,
            },
          ]
        }
      />
    </View>
  </RCTScrollView>
  <View
    style={undefined}
  >
    <View
      style={undefined}
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={undefined}
      >
        Continue
      </Text>
    </View>
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                undefined,
                undefined,
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
