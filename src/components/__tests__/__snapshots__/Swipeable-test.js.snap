// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      undefined,
      Object {
        "height": 140,
        "top": NaN,
      },
    ]
  }
>
  <View
    style={undefined}
  >
    <View
      collapsable={undefined}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 110,
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
            Object {
              "rotate": "0deg",
            },
          ],
          "width": 100,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 110,
            "opacity": 1,
            "width": 100,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <SwipeSubject
          inFront={true}
          leftAnswer="No"
          pan={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          rightAnswer="Yes"
          seenThisSession={undefined}
          setNextSubject={undefined}
          subject={
            Object {
              "id": "3424",
            }
          }
          subjectSizes={
            Object {
              "resizedHeight": 100,
              "resizedWidth": 100,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;
