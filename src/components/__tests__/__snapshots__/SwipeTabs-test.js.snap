// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a button if there is a field guide 1`] = `
<View>
  <View
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
        style={undefined}
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            undefined,
            Array [
              undefined,
            ],
          ]
        }
      >
        Yes
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            undefined,
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        ï‰¸
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            undefined,
            Array [
              undefined,
            ],
          ]
        }
      >
        Field Guide
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
        style={undefined}
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            undefined,
            Array [
              undefined,
            ],
          ]
        }
      >
        No
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly and with no button if no field guide 1`] = `
<View>
  <View
    style={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
        style={undefined}
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            undefined,
            Array [
              undefined,
            ],
          ]
        }
      >
        Yes
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
        style={undefined}
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            undefined,
            Array [
              undefined,
            ],
          ]
        }
      >
        No
      </Text>
    </View>
  </View>
</View>
`;
