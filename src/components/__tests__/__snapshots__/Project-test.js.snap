// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  collapsable={undefined}
  style={
    Object {
      "height": 269,
      "opacity": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 244,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      onLoadEnd={[Function]}
      source={
        Object {
          "uri": "fake_avatar",
        }
      }
      style={
        Array [
          undefined,
          Object {
            "height": 244,
          },
        ]
      }
    />
    <View
      style={undefined}
    />
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <View
          style={undefined}
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={undefined}
            >
              Nice project
            </Text>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={undefined}
          />
        </View>
        <View
          style={
            Array [
              undefined,
              Object {
                "backgroundColor": "#AFA48C",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                undefined,
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders mobile icon for mobile projects 1`] = `
<View
  collapsable={undefined}
  style={
    Object {
      "height": 269,
      "opacity": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 244,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      onLoadEnd={[Function]}
      source={
        Object {
          "uri": "fake_avatar",
        }
      }
      style={
        Array [
          undefined,
          Object {
            "height": 244,
          },
        ]
      }
    />
    <View
      style={undefined}
    />
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <Image
          resizeMode="cover"
          source={1}
          style={undefined}
        />
        <View
          style={undefined}
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={undefined}
            >
              Nice project
            </Text>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={undefined}
          />
        </View>
        <View
          style={
            Array [
              undefined,
              Object {
                "backgroundColor": "#AFA48C",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                undefined,
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders wallpaper if no avatar 1`] = `
<View
  collapsable={undefined}
  style={
    Object {
      "height": 269,
      "opacity": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 244,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      onLoadEnd={[Function]}
      source={1}
      style={
        Array [
          undefined,
          undefined,
          Object {
            "height": 244,
          },
        ]
      }
    />
    <View
      style={undefined}
    />
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <View
          style={undefined}
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={undefined}
            >
              Nice project
            </Text>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={undefined}
          />
        </View>
        <View
          style={
            Array [
              undefined,
              Object {
                "backgroundColor": "#AFA48C",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                undefined,
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders workflow rows for multi mobile projects 1`] = `
<View
  collapsable={undefined}
  style={
    Object {
      "height": 269,
      "opacity": 0,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 244,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      onLoadEnd={[Function]}
      source={
        Object {
          "uri": "fake_avatar",
        }
      }
      style={
        Array [
          undefined,
          Object {
            "height": 244,
          },
        ]
      }
    />
    <View
      style={undefined}
    />
    <View
      style={undefined}
    >
      <View
        style={undefined}
      >
        <Image
          resizeMode="cover"
          source={1}
          style={undefined}
        />
        <View
          style={undefined}
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={undefined}
            >
              Nice project
            </Text>
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={2}
            style={undefined}
          />
        </View>
        <View
          style={
            Array [
              undefined,
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                undefined,
                Object {
                  "backgroundColor": "#AFA48C",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                undefined,
                Object {
                  "backgroundColor": "#AFA48C",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
